/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.border.Border;
import javax.swing.BorderFactory;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Jose Luiz
 */
public class RegisterForm extends javax.swing.JFrame {

    /**
     * Creates new form RegisterForm
     */
    
    String image_path = null;
    
    public RegisterForm() {
        initComponents();
        
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        closebutton = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        namefield = new javax.swing.JTextField();
        name_separator = new javax.swing.JSeparator();
        usernamefield = new javax.swing.JTextField();
        username_separator = new javax.swing.JSeparator();
        emailfield = new javax.swing.JTextField();
        email_separator = new javax.swing.JSeparator();
        phonefield = new javax.swing.JTextField();
        phone_separator = new javax.swing.JSeparator();
        pfptitle = new javax.swing.JLabel();
        pfpbutton = new javax.swing.JButton();
        pfp_pathtitle = new javax.swing.JLabel();
        pfp_path = new javax.swing.JLabel();
        pwdfield1 = new javax.swing.JPasswordField();
        pwd_separator1 = new javax.swing.JSeparator();
        pwdfield2 = new javax.swing.JPasswordField();
        pwd_separator2 = new javax.swing.JSeparator();
        registerbutton = new javax.swing.JButton();
        loginlink = new javax.swing.JLabel();
        logintext = new javax.swing.JLabel();
        bgblue = new javax.swing.JLabel();
        bgwhite = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        closebutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/close-button.png"))); // NOI18N
        closebutton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        closebutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closebuttonMouseClicked(evt);
            }
        });
        getContentPane().add(closebutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 20, 20, 20));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgregister/logo+descricao.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 570, 730));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgregister/registerfield_title.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 80, 100, 30));

        namefield.setBorder(null);
        getContentPane().add(namefield, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 140, 280, 30));
        namefield.getAccessibleContext().setAccessibleName("");

        name_separator.setForeground(new java.awt.Color(60, 86, 240));
        getContentPane().add(name_separator, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 170, 280, 10));

        usernamefield.setBorder(null);
        getContentPane().add(usernamefield, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 200, 280, 30));

        username_separator.setForeground(new java.awt.Color(60, 86, 240));
        getContentPane().add(username_separator, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 230, 280, 10));

        emailfield.setBorder(null);
        getContentPane().add(emailfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 260, 280, 30));

        email_separator.setForeground(new java.awt.Color(60, 86, 240));
        getContentPane().add(email_separator, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 290, 280, 10));

        phonefield.setBorder(null);
        phonefield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                phonefieldKeyTyped(evt);
            }
        });
        getContentPane().add(phonefield, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 320, 280, 30));

        phone_separator.setForeground(new java.awt.Color(60, 86, 240));
        getContentPane().add(phone_separator, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 350, 280, 10));

        pfptitle.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        pfptitle.setText("Escolha uma foto de perfil:");
        getContentPane().add(pfptitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 530, 130, 20));

        pfpbutton.setBackground(new java.awt.Color(60, 86, 240));
        pfpbutton.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        pfpbutton.setForeground(new java.awt.Color(255, 255, 255));
        pfpbutton.setText("Selecionar imagem");
        pfpbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pfpbuttonActionPerformed(evt);
            }
        });
        getContentPane().add(pfpbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 550, 280, 30));

        pfp_pathtitle.setText("Caminho:");
        getContentPane().add(pfp_pathtitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 580, -1, 20));
        getContentPane().add(pfp_path, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 580, 220, 20));

        pwdfield1.setBorder(null);
        getContentPane().add(pwdfield1, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 380, 280, 30));

        pwd_separator1.setForeground(new java.awt.Color(60, 86, 240));
        getContentPane().add(pwd_separator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 410, 280, 10));

        pwdfield2.setBorder(null);
        getContentPane().add(pwdfield2, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 440, 280, 30));

        pwd_separator2.setForeground(new java.awt.Color(60, 86, 240));
        getContentPane().add(pwd_separator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 470, 280, 10));

        registerbutton.setBackground(new java.awt.Color(60, 86, 240));
        registerbutton.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        registerbutton.setForeground(new java.awt.Color(240, 240, 240));
        registerbutton.setText("Registrar");
        registerbutton.setToolTipText("");
        registerbutton.setBorder(null);
        registerbutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                registerbuttonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                registerbuttonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                registerbuttonMouseExited(evt);
            }
        });
        registerbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerbuttonActionPerformed(evt);
            }
        });
        getContentPane().add(registerbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 630, 280, 50));

        loginlink.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        loginlink.setForeground(new java.awt.Color(80, 64, 240));
        loginlink.setText("Faça login aqui.");
        loginlink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginlinkMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                loginlinkMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                loginlinkMouseExited(evt);
            }
        });
        getContentPane().add(loginlink, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 690, -1, -1));

        logintext.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        logintext.setText("Já possui uma conta?");
        getContentPane().add(logintext, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 690, -1, -1));

        bgblue.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgregister/blue-bg.png"))); // NOI18N
        getContentPane().add(bgblue, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 600, 790));

        bgwhite.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgregister/white-bg.png"))); // NOI18N
        getContentPane().add(bgwhite, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 0, 710, 790));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closebuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closebuttonMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_closebuttonMouseClicked

    private void registerbuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerbuttonMouseClicked
        // TODO add your handling code here:
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_registerbuttonMouseClicked

    private void registerbuttonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerbuttonMouseEntered
        // TODO add your handling code here:
        registerbutton.setBackground(new Color(33, 51, 163));
    }//GEN-LAST:event_registerbuttonMouseEntered

    private void registerbuttonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerbuttonMouseExited
        // TODO add your handling code here:
        registerbutton.setBackground(new Color(60, 84, 240));
    }//GEN-LAST:event_registerbuttonMouseExited

    private void registerbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerbuttonActionPerformed
        // TODO add your handling code here:
        
        String fname = namefield.getText();
        String username = usernamefield.getText();
        String email = emailfield.getText();
        String pass1 = String.valueOf(pwdfield1.getPassword());
        String pass2 = String.valueOf(pwdfield2.getPassword());
        String phone = phonefield.getText();
        
        if(verifyFields()){
            if(!checkUsername(username)){
                PreparedStatement ps;
                ResultSet rs;
                String registerUserQuery = "INSERT INTO `users`(`name`, `username`, `email`, `phone`, `password`, `pfp`) VALUES (?, ?, ?, ?, ?, ?)";
                
                try {
                    ps = ConnectionFactory.getConnection().prepareStatement(registerUserQuery);
                    ps.setString(1, fname);
                    ps.setString(2, username);
                    ps.setString(3, email);
                    ps.setString(4, phone);
                    ps.setString(5, pass1);
                    
                    try {
                        //Salvar a imagem como BLOB no banco de dados
                        if(image_path != null){
                            InputStream image = new FileInputStream(new File(image_path));
                            ps.setBlob(6, image);
                        }
                        else{
                            ps.setNull(6, java.sql.Types.NULL);
                        }
                                                
                        if(ps.executeUpdate() != 0){
                            JOptionPane.showMessageDialog(null, "Sua conta foi criada com sucesso.");
                        }
                        else{
                            JOptionPane.showMessageDialog(null, "Erro: Cheque as informações inseridas.");
                        }
                        
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(RegisterForm.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    
                } catch (SQLException ex) {
                    Logger.getLogger(RegisterForm.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
        }
        
    }//GEN-LAST:event_registerbuttonActionPerformed

    private void pfpbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pfpbuttonActionPerformed
        // TODO add your handling code here:
        String path = null;
        JFileChooser chooser = new JFileChooser();
        
        chooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        
        // extensão do arquivo
        
        FileNameExtensionFilter extension = new FileNameExtensionFilter("*Images", "jpg", "png", "jpeg");
        chooser.addChoosableFileFilter(extension);
        
        int filestate = chooser.showSaveDialog(null);
        
        // Checar se o usuário selecionou uma imagem
        if(filestate == JFileChooser.APPROVE_OPTION){
            File selectedImage = chooser.getSelectedFile();
            path = selectedImage.getAbsolutePath();
            pfp_path.setText(path);
            
            image_path = path;
        }
        
    }//GEN-LAST:event_pfpbuttonActionPerformed

    private void phonefieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phonefieldKeyTyped
        // TODO add your handling code here:
        if(!Character.isDigit(evt.getKeyChar())){
            evt.consume();
        }
    }//GEN-LAST:event_phonefieldKeyTyped

    private void loginlinkMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginlinkMouseEntered
        // TODO add your handling code here:
        Border label_border = BorderFactory.createMatteBorder(0, 0, 1, 0, Color.blue);
        loginlink.setBorder(label_border);
    }//GEN-LAST:event_loginlinkMouseEntered

    private void loginlinkMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginlinkMouseExited
        // TODO add your handling code here:
        Border label_border = BorderFactory.createMatteBorder(0, 0, 0, 0, Color.gray);
        loginlink.setBorder(label_border);
    }//GEN-LAST:event_loginlinkMouseExited

    private void loginlinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginlinkMouseClicked
        // TODO add your handling code here:
        //lf é o login form abreviado
        Login lf = new Login();
        lf.setVisible(true);
        lf.pack();
        lf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_loginlinkMouseClicked

    // Criar uma função para verificar os campos que estão vazios
    public boolean verifyFields(){
        String fname = namefield.getText();
        String uname = usernamefield.getText();
        String email = emailfield.getText();
        String phone = phonefield.getText();
        String pass1 = String.valueOf(pwdfield1.getPassword());
        String pass2 = String.valueOf(pwdfield2.getPassword());
        
        if(fname.trim().equals("") || uname.trim().equals("") || email.trim().equals("") || phone.trim().equals("")
           || pass1.trim().equals("") || pass2.trim().equals("")){
            JOptionPane.showMessageDialog(null, "Um ou mais campos estão vazios", "Campos vazios", 2);
            return false;
        }
        
        //checar se ambas as senhas são iguais
        else if(!pass1.equals(pass2)){
            JOptionPane.showMessageDialog(null, "As senhas não coincidem", "Confirmar senha", 2);
            return false;
        }
        
        //se tudo estiver correto
        else{
            return true;
        }
    }
    
    //Criar uma função para checar se o usuário já existe na base de dados
    public boolean checkUsername(String username){
        
        PreparedStatement st;
        ResultSet rs;
        boolean username_exist = false;
        
        String query = "SELECT * FROM `users` WHERE `username` = ?";
        
        
        try {
            st = ConnectionFactory.getConnection().prepareStatement(query);
            st.setString(1, username);
            rs = st.executeQuery();
            
            if(rs.next()){
                username_exist = true;
                JOptionPane.showMessageDialog(null, "Esse nome de usuário já existe. Por favor, escolha outro nome", "Falha na criação do usuário", 2);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(RegisterForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return username_exist;
        
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bgblue;
    private javax.swing.JLabel bgwhite;
    private javax.swing.JLabel closebutton;
    private javax.swing.JSeparator email_separator;
    private javax.swing.JTextField emailfield;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel loginlink;
    private javax.swing.JLabel logintext;
    private javax.swing.JSeparator name_separator;
    private javax.swing.JTextField namefield;
    private javax.swing.JLabel pfp_path;
    private javax.swing.JLabel pfp_pathtitle;
    private javax.swing.JButton pfpbutton;
    private javax.swing.JLabel pfptitle;
    private javax.swing.JSeparator phone_separator;
    private javax.swing.JTextField phonefield;
    private javax.swing.JSeparator pwd_separator1;
    private javax.swing.JSeparator pwd_separator2;
    private javax.swing.JPasswordField pwdfield1;
    private javax.swing.JPasswordField pwdfield2;
    private javax.swing.JButton registerbutton;
    private javax.swing.JSeparator username_separator;
    private javax.swing.JTextField usernamefield;
    // End of variables declaration//GEN-END:variables
}
